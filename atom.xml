<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lexokid的博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-01-20T11:25:26.462Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Lexokid</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MarkDown代码块支持的语言</title>
    <link href="http://yoursite.com/2017/01/20/MarkDown%E4%BB%A3%E7%A0%81%E5%9D%97%E6%94%AF%E6%8C%81%E7%9A%84%E8%AF%AD%E8%A8%80/"/>
    <id>http://yoursite.com/2017/01/20/MarkDown代码块支持的语言/</id>
    <published>2017-01-20T11:21:01.000Z</published>
    <updated>2017-01-20T11:25:26.462Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th>名称</th>
<th>关键字</th>
</tr>
</thead>
<tbody>
<tr>
<td>AppleScript</td>
<td>applescript</td>
</tr>
<tr>
<td>ActionScript 3.0</td>
<td>actionscript3 , as3</td>
</tr>
<tr>
<td>Shell</td>
<td>bash , shell</td>
</tr>
<tr>
<td>ColdFusion</td>
<td>coldfusion , cf</td>
</tr>
<tr>
<td>C</td>
<td>cpp , c</td>
</tr>
<tr>
<td>C#</td>
<td>c# , c-sharp , csharp</td>
</tr>
<tr>
<td>CSS</td>
<td>css</td>
</tr>
<tr>
<td>Delphi</td>
<td>delphi , pascal , pas</td>
</tr>
<tr>
<td>diff&amp;patch</td>
<td>diff patch</td>
</tr>
<tr>
<td>Erlang</td>
<td>erl , erlang</td>
</tr>
<tr>
<td>Groovy</td>
<td>groovy</td>
</tr>
<tr>
<td>Java</td>
<td>java</td>
</tr>
<tr>
<td>JavaFX</td>
<td>jfx , javafx</td>
</tr>
<tr>
<td>JavaScript</td>
<td>js , jscript , javascript</td>
</tr>
<tr>
<td>Perl</td>
<td>perl , pl , Perl</td>
</tr>
<tr>
<td>PHP</td>
<td>php</td>
</tr>
<tr>
<td>text</td>
<td>text , plain</td>
</tr>
<tr>
<td>Python</td>
<td>py , python</td>
</tr>
<tr>
<td>Ruby</td>
<td>ruby , rails , ror , rb</td>
</tr>
<tr>
<td>SASS&amp;SCSS</td>
<td>sass , scss</td>
</tr>
<tr>
<td>Scala</td>
<td>scala</td>
</tr>
<tr>
<td>SQL</td>
<td>sql</td>
</tr>
<tr>
<td>Visual Basic</td>
<td>vb , vbnet</td>
</tr>
<tr>
<td>XML</td>
<td>xml , xhtml , xslt , html</td>
</tr>
<tr>
<td>Objective C</td>
<td>objc , obj-c</td>
</tr>
<tr>
<td>F#  f#</td>
<td>f-sharp , fsharp</td>
</tr>
<tr>
<td>R</td>
<td>r , s , splus</td>
</tr>
<tr>
<td>matlab</td>
<td>matlab</td>
</tr>
<tr>
<td>swift</td>
<td>swift</td>
</tr>
<tr>
<td>GO</td>
<td>go , golang</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;关键字&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;AppleScript&lt;/td&gt;
&lt;td&gt;applescript&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ActionScr
    
    </summary>
    
      <category term="MarkDown" scheme="http://yoursite.com/categories/MarkDown/"/>
    
    
      <category term="MarkDown" scheme="http://yoursite.com/tags/MarkDown/"/>
    
  </entry>
  
  <entry>
    <title>MySql基本命令</title>
    <link href="http://yoursite.com/2017/01/20/mysql%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2017/01/20/mysql基本命令/</id>
    <published>2017-01-20T08:56:54.000Z</published>
    <updated>2017-01-26T12:08:33.401Z</updated>
    
    <content type="html"><![CDATA[<h3 id="MySQL登录"><a href="#MySQL登录" class="headerlink" title="MySQL登录"></a>MySQL登录</h3><p><strong>mysql [-u username] [-h host] [-p[password]] [-P port]</strong></p>
<table>
<thead>
<tr>
<th style="text-align:left">mysql参数</th>
<th style="text-align:center">参数-描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">-D，–database=name</td>
<td style="text-align:center">打开指定数据库</td>
</tr>
<tr>
<td style="text-align:left">-h, –host=name</td>
<td style="text-align:center">服务器名称（默认本地服务器127.0.0.1）</td>
</tr>
<tr>
<td style="text-align:left">-p，–password[=name]</td>
<td style="text-align:center">密码</td>
</tr>
<tr>
<td style="text-align:left">-P, –port=#</td>
<td style="text-align:center">端口号（默认3306）</td>
</tr>
<tr>
<td style="text-align:left">-u, –user=name</td>
<td style="text-align:center">用户名</td>
</tr>
<tr>
<td style="text-align:left">-V, –version</td>
<td style="text-align:center">输出版本信息并且退出</td>
</tr>
<tr>
<td style="text-align:left">–delimiter=name</td>
<td style="text-align:center">指定分隔符</td>
</tr>
<tr>
<td style="text-align:left">–prompt=name</td>
<td style="text-align:center">设置提示符</td>
</tr>
</tbody>
</table>
<p>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql -uroot -proot -P3306 -h127.0.0.1</div><div class="line"><span class="comment">--表示超级用户名root,密码root，端口号3306（不输入P默认为3306），主机地址127.0.0.1（若使用本机作为主机，h默认127.0.0.1）</span></div></pre></td></tr></table></figure></p>
<hr>
<h3 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h3><h4 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1.创建数据库"></a>1.创建数据库</h4><p>创建数据库,并设置其编码方式(如果不设置编码方式,系统将按照默认方式设置编码方式)<br><strong>CREATE ｛DATABASE | SCHEMA｝ [IF NOT EXITSTS] db_name [DEFAULT] CHARACTER SET [=] charset_name;</strong><br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> db1 <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> gbk;</div></pre></td></tr></table></figure></p>
<h4 id="2-查看所有数据库"><a href="#2-查看所有数据库" class="headerlink" title="2.查看所有数据库"></a>2.查看所有数据库</h4><p><strong>SHOW {DATABASES | SCHEMAS};</strong></p>
<h4 id="3-查看数据库创建时的指令"><a href="#3-查看数据库创建时的指令" class="headerlink" title="3.查看数据库创建时的指令"></a>3.查看数据库创建时的指令</h4><p><strong>SHOW CREATE DATABASE db_name;</strong></p>
<h4 id="4-修改数据库编码方式"><a href="#4-修改数据库编码方式" class="headerlink" title="4.修改数据库编码方式"></a>4.修改数据库编码方式</h4><p><strong>ALTER {DATABASE | SCHEMA} db_name [DEFAULT] CHARACTER SET [=] charset_name;</strong><br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> db1 <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8;</div></pre></td></tr></table></figure></p>
<h4 id="5-删除数据库"><a href="#5-删除数据库" class="headerlink" title="5.删除数据库"></a>5.删除数据库</h4><p><strong>DROP {DATABASE | SCHEMA} [IF EXISTS] db_name;</strong><br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> db1;</div></pre></td></tr></table></figure></p>
<h4 id="6-打开数据库"><a href="#6-打开数据库" class="headerlink" title="6.打开数据库"></a>6.打开数据库</h4><p><strong>USE db_name;</strong></p>
<h4 id="7-查看警告信息"><a href="#7-查看警告信息" class="headerlink" title="7.查看警告信息"></a>7.查看警告信息</h4><p><strong>SHOW WARNINGS;</strong></p>
<hr>
<h3 id="数据表操作"><a href="#数据表操作" class="headerlink" title="数据表操作"></a>数据表操作</h3><h4 id="1-创建数据表"><a href="#1-创建数据表" class="headerlink" title="1.创建数据表"></a>1.创建数据表</h4><p><strong>CREATE TABLE [IF NOT EXISTS] table_name(column_name(列名称) data_type(列类型)[NOT NULL|NULL],….);</strong><br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">TABLE</span> tb1(</div><div class="line">username <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">age TINYINT <span class="keyword">UNSIGNED</span>,   <span class="comment">--unsigned表示无符号位，即不能为负数</span></div><div class="line">salary <span class="built_in">FLOAT</span>(<span class="number">8</span>,<span class="number">2</span>), <span class="keyword">UNSIGNED</span>,    <span class="comment">--有效位数为8位，精度为2，即6位整数，2位小数</span></div><div class="line">);</div></pre></td></tr></table></figure></p>
<h4 id="2-添加单列"><a href="#2-添加单列" class="headerlink" title="2.添加单列"></a>2.添加单列</h4><p><strong>ALTER TABLE tbl_name ADD [COLUMN] col_name column_definitione [FIRST | AFTER col_name];</strong><br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb1 <span class="keyword">ADD</span> pwd <span class="built_in">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">AFTER</span> username;    <span class="comment">--没指定FIRST或者AFTER将位于最后</span></div></pre></td></tr></table></figure></p>
<h4 id="3-添加多列"><a href="#3-添加多列" class="headerlink" title="3.添加多列"></a>3.添加多列</h4><p><strong>ALTER TABLE tbl_name ADD [COLUMN] (col_name column_definition,…);</strong></p>
<h4 id="4-删除列"><a href="#4-删除列" class="headerlink" title="4.删除列"></a>4.删除列</h4><p><strong>ALTER TABLE tbl_name DROP col_name,…;</strong><br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb1 <span class="keyword">DROP</span> pwd, <span class="keyword">DROP</span> age;</div></pre></td></tr></table></figure></p>
<h4 id="5-查看数据表结构"><a href="#5-查看数据表结构" class="headerlink" title="5.查看数据表结构"></a>5.查看数据表结构</h4><p><strong>SHOW COLUMNS FROM table_name;</strong></p>
<h4 id="6-查看数据表列表"><a href="#6-查看数据表列表" class="headerlink" title="6.查看数据表列表"></a>6.查看数据表列表</h4><p><strong>SHOW TABLES [FROM db_name] [LIKE ‘pattern’|WHERE expr];</strong><br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SHOW</span> <span class="keyword">TABLES</span> <span class="keyword">FROM</span> mysql;    <span class="comment">--查看mysql数据库的所有表</span></div></pre></td></tr></table></figure></p>
<hr>
<h3 id="修改约束"><a href="#修改约束" class="headerlink" title="修改约束"></a>修改约束</h3><h4 id="1-添加主键约束"><a href="#1-添加主键约束" class="headerlink" title="1.添加主键约束"></a>1.添加主键约束</h4><p><strong>ALTER TABLE tbl_name ADD [CONSTRAINT [symbol]] PRIMARY KEY [index_type] (index_col_name,…);</strong><br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb1 <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> pk_tb1_username PRIMARY <span class="keyword">KEY</span> (username);</div></pre></td></tr></table></figure></p>
<h4 id="2-删除主键约束"><a href="#2-删除主键约束" class="headerlink" title="2.删除主键约束"></a>2.删除主键约束</h4><p><strong>ALTER TABLE tbl_name DROP PRIMARY KEY;</strong></p>
<h4 id="3-添加唯一约束"><a href="#3-添加唯一约束" class="headerlink" title="3.添加唯一约束"></a>3.添加唯一约束</h4><p><strong>ALTER TABLE tbl_name ADD [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY] [index_name] [index_type] (index_col_name,…);</strong><br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb1 <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> uq_tb1_age <span class="keyword">UNIQUE</span> (username);</div></pre></td></tr></table></figure></p>
<h4 id="4-删除唯一约束"><a href="#4-删除唯一约束" class="headerlink" title="4.删除唯一约束"></a>4.删除唯一约束</h4><p><strong>ALTER TABLE tbl_name DROP {INDEX|KEY} index_name;</strong><br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb1 <span class="keyword">DROP</span> uq_tb1_age;</div></pre></td></tr></table></figure></p>
<h4 id="5-添加外键约束"><a href="#5-添加外键约束" class="headerlink" title="5.添加外键约束"></a>5.添加外键约束</h4><p><strong>ALTER TABLE tbl_name ADD [CONSTRAINT [symbol]] FOREIGN KEY [index_name] (index_col_name,…) REFERENCES tbl2_name (col_name);</strong><br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb1 <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> fk_username FOREIGN <span class="keyword">KEY</span> (username) <span class="keyword">REFERENCES</span> tb2 (username);</div></pre></td></tr></table></figure></p>
<h4 id="6-删除外键约束"><a href="#6-删除外键约束" class="headerlink" title="6.删除外键约束"></a>6.删除外键约束</h4><p><strong>ALTER TABLE tbl_name DROP FOREIGN KEY fk_symbol;</strong><br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb1 <span class="keyword">DROP</span> FOREIGN <span class="keyword">KEY</span> fk_username;</div></pre></td></tr></table></figure></p>
<h4 id="7-添加-删除默认约束"><a href="#7-添加-删除默认约束" class="headerlink" title="7.添加/删除默认约束"></a>7.添加/删除默认约束</h4><p><strong>ALTER TABLE tbl_name ALTER [COLUMN] col_name {SET DEFAULT literal | DROP DEFAULT};</strong><br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb1 <span class="keyword">ALTER</span> salary <span class="keyword">SET</span> <span class="keyword">DEFAULT</span> <span class="number">2000</span>;</div></pre></td></tr></table></figure></p>
<hr>
<h3 id="字段的修改"><a href="#字段的修改" class="headerlink" title="字段的修改"></a>字段的修改</h3><h4 id="1-修改列定义"><a href="#1-修改列定义" class="headerlink" title="1.修改列定义"></a>1.修改列定义</h4><p><strong>ALTER TABLE tbl_name MODIFY [COLUMN] col_name column_definition [FIRST|AFTER col_name];</strong><br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb1 <span class="keyword">MODIFY</span> age <span class="built_in">SMALLINT</span> <span class="keyword">UNSIGNED</span> <span class="keyword">FIRST</span>;</div></pre></td></tr></table></figure></p>
<h4 id="2-修改列名称"><a href="#2-修改列名称" class="headerlink" title="2.修改列名称"></a>2.修改列名称</h4><p><strong>ALTER TABLE tbl_name CHANGE [COLUMN] old_col_name new_col_name column_definition [FIRST|AFTER col_name];</strong><br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb1 <span class="keyword">CHANGE</span> age user_age <span class="built_in">SMALLINT</span> <span class="keyword">UNSIGNED</span> <span class="keyword">FIRST</span>;</div></pre></td></tr></table></figure></p>
<h4 id="3-数据表更名"><a href="#3-数据表更名" class="headerlink" title="3.数据表更名"></a>3.数据表更名</h4><p>方法1：<strong>ALTER TABLE tbl_name RENAME [TO|AS] new_tbl_name;</strong><br>方法2：<strong>RENAME TABLE tbl_name TO new_tbl_name[,tbl_name2 TO new_tbl_name2]…;</strong><br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">RENAME</span> <span class="keyword">TABLE</span> tb1 <span class="keyword">TO</span> <span class="keyword">users</span>;</div></pre></td></tr></table></figure></p>
<hr>
<h3 id="数据的操作"><a href="#数据的操作" class="headerlink" title="数据的操作"></a>数据的操作</h3><h4 id="1-插入数据"><a href="#1-插入数据" class="headerlink" title="1.插入数据"></a>1.插入数据</h4><p>方法一：<strong>INSERT [INTO] tbl_name [(col_name)] {VALUES|VALUE}({expr|DEFAULT},…),(…),…;</strong><br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">INSERT</span> tb1(username,salary) <span class="keyword">VALUES</span>(<span class="string">'Tom'</span>,<span class="number">6666.66</span>),(<span class="string">'John'</span>,<span class="number">1234</span>);</div></pre></td></tr></table></figure></p>
<p>方法二：<strong>INSERT [INTO] tbl_name SET col_name={expr|DEFAULT},…;</strong><br>此方法可以使用子查询<br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">INSERT</span> tb1 <span class="keyword">SET</span> username=<span class="string">'Ben'</span>,salary=<span class="string">'1234'</span>;</div></pre></td></tr></table></figure></p>
<p>方法三：<strong>INSERT [INTO] tbl_name [(col_name,…)] SELECT …;</strong><br>此方法可以将查询结果插入到指定数据表</p>
<h4 id="2-更改数据"><a href="#2-更改数据" class="headerlink" title="2.更改数据"></a>2.更改数据</h4><p><strong>UPDATE [LOW_PRIORITY] [IGNORE] table_reference SET col_name1={expr1|DEFAULT} [,col_name2={expr2|DEFAULT}]… [WHERE where_condition]</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">UPDATE</span> tb1 <span class="keyword">SET</span> salary = <span class="number">1000</span>, age = age + <span class="number">5</span>;</div><div class="line"><span class="keyword">UPDATE</span> tb1 <span class="keyword">SET</span> salary = salary + <span class="number">1000</span> <span class="keyword">WHERE</span> age &gt;= <span class="number">20</span>;</div></pre></td></tr></table></figure></p>
<h4 id="3-删除数据"><a href="#3-删除数据" class="headerlink" title="3.删除数据"></a>3.删除数据</h4><p><strong>DELETE FROM tbl_name [WHERE where_condition];</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> tb1 <span class="keyword">WHERE</span> username = <span class="string">'Tom'</span>;</div></pre></td></tr></table></figure></p>
<h4 id="4-查找记录"><a href="#4-查找记录" class="headerlink" title="4.查找记录"></a>4.查找记录</h4><p><strong>SELECT expr,… FROM table_name;</strong><br>示例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> tb1;</div></pre></td></tr></table></figure></p>
<hr>
<h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><h4 id="1-显示当前服务版本号"><a href="#1-显示当前服务版本号" class="headerlink" title="1.显示当前服务版本号"></a>1.显示当前服务版本号</h4><p><strong>SELECT VERSION();</strong></p>
<h4 id="2-显示当前用户"><a href="#2-显示当前用户" class="headerlink" title="2.显示当前用户"></a>2.显示当前用户</h4><p><strong>SELECT USER();</strong></p>
<h4 id="3-显示当前日期时间"><a href="#3-显示当前日期时间" class="headerlink" title="3.显示当前日期时间"></a>3.显示当前日期时间</h4><p><strong>SELECT NOW();</strong></p>
<h4 id="4-显示当前所在数据库"><a href="#4-显示当前所在数据库" class="headerlink" title="4.显示当前所在数据库"></a>4.显示当前所在数据库</h4><p><strong>SELECT DATABASE();</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;MySQL登录&quot;&gt;&lt;a href=&quot;#MySQL登录&quot; class=&quot;headerlink&quot; title=&quot;MySQL登录&quot;&gt;&lt;/a&gt;MySQL登录&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;mysql [-u username] [-h host] [-p[password
    
    </summary>
    
      <category term="MySql" scheme="http://yoursite.com/categories/MySql/"/>
    
    
      <category term="MySql" scheme="http://yoursite.com/tags/MySql/"/>
    
      <category term="语法" scheme="http://yoursite.com/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>typeof和instanceof</title>
    <link href="http://yoursite.com/2017/01/14/typeof%E5%92%8Cinstanceof/"/>
    <id>http://yoursite.com/2017/01/14/typeof和instanceof/</id>
    <published>2017-01-14T08:40:56.000Z</published>
    <updated>2017-01-14T15:14:22.239Z</updated>
    
    <content type="html"><![CDATA[<h2 id="typeof和instanceof"><a href="#typeof和instanceof" class="headerlink" title="typeof和instanceof"></a>typeof和instanceof</h2><p>如果要对一个值进行分类，你就不得不区分JavaScript中的原始值和对象</p>
<ul>
<li>typeof运算符能区分原始值和对象，并检测出原始值的类型</li>
<li>instanceof运算符可以检测一个对象是否是特定构造函数的一个实例</li>
</ul>
<h3 id="typeof"><a href="#typeof" class="headerlink" title="typeof"></a>typeof</h3><p>typeof运算符用法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typeof</span> <span class="literal">undefined</span>;    <span class="comment">//'undefined'</span></div><div class="line"><span class="keyword">typeof</span> <span class="string">'abc'</span>;    <span class="comment">//'string'</span></div><div class="line"><span class="keyword">typeof</span> &#123;&#125;;    <span class="comment">//'object'</span></div><div class="line"><span class="keyword">typeof</span> [];    <span class="comment">//'object'</span></div></pre></td></tr></table></figure></p>
<p>返回一个字符串，会描述值的类型是什么</p>
<table>
<thead>
<tr>
<th style="text-align:center">运算数</th>
<th style="text-align:center">结果</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">undefined</td>
<td style="text-align:center">‘undefined’</td>
</tr>
<tr>
<td style="text-align:center">null</td>
<td style="text-align:center">‘null’</td>
</tr>
<tr>
<td style="text-align:center">布尔值</td>
<td style="text-align:center">‘boolean’</td>
</tr>
<tr>
<td style="text-align:center">数字</td>
<td style="text-align:center">‘number’</td>
</tr>
<tr>
<td style="text-align:center">字符串</td>
<td style="text-align:center">‘string’</td>
</tr>
<tr>
<td style="text-align:center">函数</td>
<td style="text-align:center">‘function’</td>
</tr>
<tr>
<td style="text-align:center">所有其他常规属性</td>
<td style="text-align:center">‘object’</td>
</tr>
</tbody>
</table>
<p>注意：typeof null返回object是一个不能去修正的bug，因为这会破坏现有的代码。判断一个值是否是对象可以用下面这个函数：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isObject</span>(<span class="params">value</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> (value !== <span class="literal">null</span></div><div class="line">        &amp;&amp; (<span class="keyword">typeof</span> value === <span class="string">'object'</span></div><div class="line">            || <span class="keyword">typeof</span> value === <span class="string">'function'</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="instanceof"><a href="#instanceof" class="headerlink" title="instanceof"></a>instanceof</h3><p>判断value是由构造函数Constr还是子构造函数创建的，所以它是检测Constr.prototype是否在value的原型链上。因此，下两个表达式是等价的：<br><code>value instanceof Constr</code><br><code>Constr.prototype.isPrototypeOf(value)</code></p>
<p>instanceof运算符用法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&#123;&#125; <span class="keyword">instanceof</span> <span class="built_in">Object</span>;    <span class="comment">//true</span></div><div class="line">[] <span class="keyword">instanceof</span> <span class="built_in">Array</span>;    <span class="comment">//true</span></div><div class="line">[] <span class="keyword">instanceof</span> <span class="built_in">Object</span>;    <span class="comment">//true</span></div><div class="line"></div><div class="line"><span class="literal">undefined</span> <span class="keyword">instanceof</span> <span class="built_in">Object</span>;    <span class="comment">//false</span></div><div class="line"><span class="literal">null</span> <span class="keyword">instanceof</span> <span class="built_in">Object</span>;    <span class="comment">//false</span></div><div class="line"></div><div class="line"><span class="keyword">new</span> <span class="built_in">Date</span>() <span class="keyword">instanceof</span> <span class="built_in">Date</span>;    <span class="comment">//true</span></div><div class="line"><span class="keyword">new</span> <span class="built_in">Date</span>() <span class="keyword">instanceof</span> <span class="built_in">Object</span>;    <span class="comment">//true</span></div><div class="line"></div><div class="line"><span class="string">'abc'</span> <span class="keyword">instanceof</span> <span class="built_in">String</span>;    <span class="comment">//false</span></div><div class="line"><span class="number">123</span> <span class="keyword">instanceof</span> <span class="built_in">Number</span>;    <span class="comment">//false</span></div></pre></td></tr></table></figure></p>
<p>instanceof对原始值总是false<br>如果instanceof的右边不是函数，则会抛出异常<br><code>[] instanceof 123;    //TypeError: Expecting a function in instanceof check</code></p>
<p>注意：几乎所有的对象都是Object的实例，因为Object.prototype在这些对象的原型链上。但也有个别对象不属于这种情况，如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Object</span>.create(<span class="literal">null</span>) <span class="keyword">instanceof</span> <span class="built_in">Object</span>;    <span class="comment">//false</span></div><div class="line"><span class="built_in">Object</span>.prototype <span class="keyword">instanceof</span> <span class="built_in">Object</span>;    <span class="comment">//false</span></div></pre></td></tr></table></figure></p>
<p>是因为这些是没有原型的对象：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Object</span>.getPrototypeOf(<span class="built_in">Object</span>.create(<span class="literal">null</span>));    <span class="comment">//null</span></div><div class="line"><span class="built_in">Object</span>.getPrototypeOf(<span class="built_in">Object</span>.prototype);    <span class="comment">//null</span></div></pre></td></tr></table></figure></p>
<p>但typeof可以正确的把这些归类为对象：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typeof</span> <span class="built_in">Object</span>.create(<span class="literal">null</span>);    <span class="comment">//'Object'</span></div><div class="line"><span class="keyword">typeof</span> <span class="built_in">Object</span>.prototype;    <span class="comment">//'Object'</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;typeof和instanceof&quot;&gt;&lt;a href=&quot;#typeof和instanceof&quot; class=&quot;headerlink&quot; title=&quot;typeof和instanceof&quot;&gt;&lt;/a&gt;typeof和instanceof&lt;/h2&gt;&lt;p&gt;如果要对一个值进行分
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>原始值和对象</title>
    <link href="http://yoursite.com/2017/01/13/%E5%8E%9F%E5%A7%8B%E5%80%BC%E5%92%8C%E5%AF%B9%E8%B1%A1/"/>
    <id>http://yoursite.com/2017/01/13/原始值和对象/</id>
    <published>2017-01-13T07:52:00.000Z</published>
    <updated>2017-01-14T08:00:22.580Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原始值和对象"><a href="#原始值和对象" class="headerlink" title="原始值和对象"></a>原始值和对象</h2><p>在阅读深入理解JavaScript中发现值可以分为两类：<strong>原始值</strong>和<strong>对象</strong></p>
<ul>
<li>原始值包括布尔值、数字、字符串、null和undefined</li>
<li>其他的值都是对象</li>
</ul>
<p>两者之间最主要的区别在于它们的比较方式：每个对象都有唯一的标识且（严格的）等于自己：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj1 = &#123;&#125;;</div><div class="line"><span class="keyword">var</span> obj2 = &#123;&#125;;</div><div class="line">obj1 === obj2;    <span class="comment">//false</span></div><div class="line">obj1 === obj1;    <span class="comment">//true</span></div></pre></td></tr></table></figure></p>
<p>相反，所有原始值只要编码值相同，则被认为相等：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> prim1 = <span class="number">123</span>;</div><div class="line"><span class="keyword">var</span> prim2 = <span class="number">123</span>;</div><div class="line">prim1 === prim2;    <span class="comment">//true</span></div></pre></td></tr></table></figure></p>
<h3 id="原始值"><a href="#原始值" class="headerlink" title="原始值"></a>原始值</h3><p>原始值包括布尔值、数字、字符串、null和undefined<br>原始值具有以下特点：</p>
<ol>
<li><p>按值比较</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="number">3</span> === <span class="number">3</span>;    <span class="comment">//true</span></div><div class="line"><span class="string">'abc'</span> === <span class="string">'abc'</span>;    <span class="comment">//true</span></div></pre></td></tr></table></figure>
</li>
<li><p>不可改变<br>其属性不能被改变、添加和删除</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> str = <span class="string">'abc'</span>;</div><div class="line">str.length = <span class="number">1</span>;</div><div class="line">str.length;    <span class="comment">//3</span></div><div class="line"></div><div class="line">str.foo = <span class="number">3</span>;</div><div class="line">str.foo;    <span class="comment">//undefined</span></div><div class="line"><span class="comment">//读取未知属性时，总会返回undefined</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p>所有非原始值都是对象<br>对象具有以下特点：</p>
<ol>
<li><p>按引用进行比较<br>比较身份标识：每个值都有各自的身份标识</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;&#125; === &#123;&#125;;    <span class="comment">//false</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> obj1 = &#123;&#125;;</div><div class="line"><span class="keyword">var</span> obj2 = obj1;</div><div class="line">obj1 === obj2;    <span class="comment">//true</span></div></pre></td></tr></table></figure>
</li>
<li><p>默认可变<br>对象属性可以被改变、添加和删除</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj = &#123;&#125;;</div><div class="line">obj.foo = <span class="number">123</span>;</div><div class="line">obj.foo;    <span class="comment">//123</span></div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原始值和对象&quot;&gt;&lt;a href=&quot;#原始值和对象&quot; class=&quot;headerlink&quot; title=&quot;原始值和对象&quot;&gt;&lt;/a&gt;原始值和对象&lt;/h2&gt;&lt;p&gt;在阅读深入理解JavaScript中发现值可以分为两类：&lt;strong&gt;原始值&lt;/strong&gt;和&lt;stro
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/11/04/Hello%20World/"/>
    <id>http://yoursite.com/2016/11/04/Hello World/</id>
    <published>2016-11-04T11:31:48.000Z</published>
    <updated>2017-01-13T07:37:34.900Z</updated>
    
    <content type="html"><![CDATA[<p>在2016年11月4日，我终于开通了博客，用来记录自己学习的点点滴滴和监督自己，会更新一些自己学习到的内容和总结。总之开始了我的博客之路。<br><img src="/images/75FEC0E76AE1E8652C17C93BD1DFF802.jpg" style="height: 200px;"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在2016年11月4日，我终于开通了博客，用来记录自己学习的点点滴滴和监督自己，会更新一些自己学习到的内容和总结。总之开始了我的博客之路。&lt;br&gt;&lt;img src=&quot;/images/75FEC0E76AE1E8652C17C93BD1DFF802.jpg&quot; style=&quot;h
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
